{
    "info": {
        "name": "Binance Rebate REST API",
        "description": {
            "content": "OpenAPI Specification for the Binance Rebate REST API",
            "type": "text/markdown"
        },
        "version": "1.0.0",
        "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "event": [
        {
            "listen": "prerequest",
            "script": {
                "exec": [
                    "const ts = Date.now();",
                    "let paramsObject = {};",
                    "const postmanEnvironment = pm.environment.get('environment');",
                    "const api_key = pm.environment.get('api-key');",
                    "const api_secret = pm.environment.get('api-secret');",
                    "const parameters = pm.request.url.query;",
                    "",
                    "// set host based on env",
                    "pm.request.url.host = [pm.variables.get('prod_url')];",
                    "",
                    "// build paramsObject (skip any existing signature)",
                    "parameters.each((param) => {",
                    "    if (param.key !== 'signature' && !is_empty(param.value) && !is_disabled(param.disabled)) {",
                    "        paramsObject[param.key] = param.value;",
                    "    }",
                    "});",
                    "",
                    "// add timestamp",
                    "Object.assign(paramsObject, { timestamp: ts });",
                    "",
                    "// set api key",
                    "setOrUpdateHeaderParam('X-MBX-APIKEY', api_key);",
                    "",
                    "// only sign if a signature param was declared and we have a secret",
                    "if (parameters.has('signature') && api_secret) {",
                    "    // canonical query string",
                    "    const queryString = Object.keys(paramsObject)",
                    "        .map((key) => `${key}=${paramsObject[key]}`)",
                    "        .join('&');",
                    "",
                    "    const encoder = new TextEncoder();",
                    "    const keyData = encoder.encode(api_secret);",
                    "    const msgData = encoder.encode(queryString);",
                    "",
                    "    const cryptoKey = await crypto.subtle.importKey('raw', keyData, { name: 'HMAC', hash: 'SHA-256' }, false, ['sign']);",
                    "    const signatureBuffer = await crypto.subtle.sign('HMAC', cryptoKey, msgData);",
                    "",
                    "    const signature = Array.from(new Uint8Array(signatureBuffer))",
                    "        .map((b) => b.toString(16).padStart(2, '0'))",
                    "        .join('');",
                    "",
                    "    // update request",
                    "    setOrUpdateQueryParam('timestamp', ts.toString());",
                    "    setOrUpdateQueryParam('signature', signature);",
                    "}",
                    "",
                    "function setOrUpdateQueryParam(key, value) {",
                    "    let params = pm.request.url.query;",
                    "    let param = params.find((param) => param.key === key);",
                    "    if (param) param.value = value;",
                    "    else pm.request.url.query.add({ key, value });",
                    "}",
                    "",
                    "function setOrUpdateHeaderParam(key, value) {",
                    "    let headers = pm.request.headers;",
                    "    let header = headers.find((header) => header.key === key);",
                    "    if (header) header.value = value;",
                    "    else pm.request.headers.add({ key, value });",
                    "}",
                    "",
                    "function is_disabled(str) {",
                    "    return str === true;",
                    "}",
                    "",
                    "function is_empty(str) {",
                    "    return (",
                    "        typeof str === 'undefined' ||",
                    "        !str ||",
                    "        str.length === 0 ||",
                    "        str === '' ||",
                    "        !/[^\\\\s]/.test(str) ||",
                    "        /^\\\\s*$/.test(str) ||",
                    "        str.replace(/\\\\s/g, '') === ''",
                    "    );",
                    "}"
                ],
                "type": "text/javascript"
            }
        }
    ],
    "item": [
        {
            "name": "Rebate",
            "item": [
                {
                    "name": "Get Spot Rebate History Records (USER_DATA)",
                    "request": {
                        "method": "GET",
                        "header": [
                            {
                                "key": "X-MBX-APIKEY",
                                "value": "",
                                "description": "API KEY",
                                "disabled": false
                            },
                            {
                                "key": "Accept",
                                "value": "application/json",
                                "description": "",
                                "disabled": false
                            }
                        ],
                        "body": {
                            "mode": "raw",
                            "raw": "",
                            "options": {
                                "raw": {
                                    "language": "json"
                                }
                            }
                        },
                        "url": {
                            "raw": "{{url}}/sapi/v1/rebate/taxQuery",
                            "host": ["{{url}}"],
                            "path": ["sapi", "v1", "rebate", "taxQuery"],
                            "variable": [],
                            "query": [
                                {
                                    "key": "startTime",
                                    "value": "1623319461670",
                                    "description": "",
                                    "disabled": true
                                },
                                {
                                    "key": "endTime",
                                    "value": "1641782889000",
                                    "description": "",
                                    "disabled": true
                                },
                                {
                                    "key": "page",
                                    "value": "1",
                                    "description": "Default 1",
                                    "disabled": true
                                },
                                {
                                    "key": "recvWindow",
                                    "value": "5000",
                                    "description": "",
                                    "disabled": true
                                },
                                {
                                    "key": "timestamp",
                                    "value": "",
                                    "description": "UTC timestamp in ms",
                                    "disabled": false
                                },
                                {
                                    "key": "signature",
                                    "value": "",
                                    "description": "Signature",
                                    "disabled": false
                                }
                            ]
                        }
                    }
                }
            ]
        }
    ],

    "variable": [
        {
            "key": "prod_url",
            "value": "https://api.binance.com",
            "type": "string"
        }
    ]
}
