"""Initial migration

Revision ID: a3c7d3af78e2
Revises: 
Create Date: 2025-07-24 10:56:07.993182

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
import sqlmodel
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = 'a3c7d3af78e2'
down_revision: Union[str, Sequence[str], None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('rawbinancedata',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('source_raw_id', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('raw_payload', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('ingested_at', sa.DateTime(), nullable=False),
    sa.Column('processing_status', sa.Enum('PENDING', 'PROCESSED', 'ERROR', name='processingstatus'), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_rawbinancedata_processing_status'), 'rawbinancedata', ['processing_status'], unique=False)
    op.create_index(op.f('ix_rawbinancedata_source_raw_id'), 'rawbinancedata', ['source_raw_id'], unique=False)
    op.create_table('rawfireblocksdata',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('source_raw_id', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('raw_payload', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('ingested_at', sa.DateTime(), nullable=False),
    sa.Column('processing_status', sa.Enum('PENDING', 'PROCESSED', 'ERROR', name='processingstatus'), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_rawfireblocksdata_processing_status'), 'rawfireblocksdata', ['processing_status'], unique=False)
    op.create_index(op.f('ix_rawfireblocksdata_source_raw_id'), 'rawfireblocksdata', ['source_raw_id'], unique=False)
    op.create_table('user',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('email', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('hashed_password', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('google_auth_id', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('google_auth_id')
    )
    op.create_index(op.f('ix_user_email'), 'user', ['email'], unique=True)
    op.create_table('portfolio',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('transaction',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('source_id', sa.Integer(), nullable=False),
    sa.Column('timestamp', sa.DateTime(), nullable=False),
    sa.Column('asset', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('amount', sa.Numeric(), nullable=False),
    sa.Column('type', sa.Enum('DEPOSIT', 'WITHDRAWAL', 'TRADE', name='transactiontype'), nullable=False),
    sa.Column('status', sa.Enum('COMPLETED', 'PENDING', 'FAILED', name='transactionstatus'), nullable=False),
    sa.ForeignKeyConstraint(['source_id'], ['rawbinancedata.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('datasource',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('portfolio_id', sa.Integer(), nullable=False),
    sa.Column('type', sa.Enum('BINANCE', 'FIREBLOCKS', name='datasourcetype'), nullable=False),
    sa.Column('api_key', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('api_secret', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.ForeignKeyConstraint(['portfolio_id'], ['portfolio.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('entity',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('portfolio_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['portfolio_id'], ['portfolio.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('rawbinancepositionsnapshot',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('data_source_id', sa.Integer(), nullable=False),
    sa.Column('account_type', sa.Enum('SPOT', 'MARGIN', 'FUTURES', name='binanceaccounttype'), nullable=False),
    sa.Column('sub_account_id', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('snapshot_timestamp', sa.DateTime(), nullable=False),
    sa.Column('balances', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('ingested_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['data_source_id'], ['datasource.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_rawbinancepositionsnapshot_account_type'), 'rawbinancepositionsnapshot', ['account_type'], unique=False)
    op.create_index(op.f('ix_rawbinancepositionsnapshot_data_source_id'), 'rawbinancepositionsnapshot', ['data_source_id'], unique=False)
    op.create_index(op.f('ix_rawbinancepositionsnapshot_snapshot_timestamp'), 'rawbinancepositionsnapshot', ['snapshot_timestamp'], unique=False)
    op.create_index(op.f('ix_rawbinancepositionsnapshot_sub_account_id'), 'rawbinancepositionsnapshot', ['sub_account_id'], unique=False)
    op.create_table('rawfireblockspositionsnapshot',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('data_source_id', sa.Integer(), nullable=False),
    sa.Column('vault_id', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('vault_name', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('snapshot_timestamp', sa.DateTime(), nullable=False),
    sa.Column('balances', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('ingested_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['data_source_id'], ['datasource.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_rawfireblockspositionsnapshot_data_source_id'), 'rawfireblockspositionsnapshot', ['data_source_id'], unique=False)
    op.create_index(op.f('ix_rawfireblockspositionsnapshot_snapshot_timestamp'), 'rawfireblockspositionsnapshot', ['snapshot_timestamp'], unique=False)
    op.create_index(op.f('ix_rawfireblockspositionsnapshot_vault_id'), 'rawfireblockspositionsnapshot', ['vault_id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_rawfireblockspositionsnapshot_vault_id'), table_name='rawfireblockspositionsnapshot')
    op.drop_index(op.f('ix_rawfireblockspositionsnapshot_snapshot_timestamp'), table_name='rawfireblockspositionsnapshot')
    op.drop_index(op.f('ix_rawfireblockspositionsnapshot_data_source_id'), table_name='rawfireblockspositionsnapshot')
    op.drop_table('rawfireblockspositionsnapshot')
    op.drop_index(op.f('ix_rawbinancepositionsnapshot_sub_account_id'), table_name='rawbinancepositionsnapshot')
    op.drop_index(op.f('ix_rawbinancepositionsnapshot_snapshot_timestamp'), table_name='rawbinancepositionsnapshot')
    op.drop_index(op.f('ix_rawbinancepositionsnapshot_data_source_id'), table_name='rawbinancepositionsnapshot')
    op.drop_index(op.f('ix_rawbinancepositionsnapshot_account_type'), table_name='rawbinancepositionsnapshot')
    op.drop_table('rawbinancepositionsnapshot')
    op.drop_table('entity')
    op.drop_table('datasource')
    op.drop_table('transaction')
    op.drop_table('portfolio')
    op.drop_index(op.f('ix_user_email'), table_name='user')
    op.drop_table('user')
    op.drop_index(op.f('ix_rawfireblocksdata_source_raw_id'), table_name='rawfireblocksdata')
    op.drop_index(op.f('ix_rawfireblocksdata_processing_status'), table_name='rawfireblocksdata')
    op.drop_table('rawfireblocksdata')
    op.drop_index(op.f('ix_rawbinancedata_source_raw_id'), table_name='rawbinancedata')
    op.drop_index(op.f('ix_rawbinancedata_processing_status'), table_name='rawbinancedata')
    op.drop_table('rawbinancedata')
    # ### end Alembic commands ###
